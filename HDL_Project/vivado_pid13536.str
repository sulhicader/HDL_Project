/*

Xilinx Vivado v2019.2 (64-bit) [Major: 2019, Minor: 2]
SW Build: 2708876 on Wed Nov  6 21:40:23 MST 2019
IP Build: 2700528 on Thu Nov  7 00:09:20 MST 2019

Process ID (PID): 13536
License: Customer

Current time: 	Sat Oct 03 16:01:28 IST 2020
Time zone: 	India Standard Time (Asia/Colombo)

OS: Windows 10
OS Version: 10.0
OS Architecture: amd64
Available processors (cores): 4

Screen size: 1366x768
Screen resolution (DPI): 100
Available screens: 1
Available disk space: 87 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	9.0.4 64-bit
Java home: 	C:/Xilinx/Vivado/2019.2/tps/win64/jre9.0.4
Java executable location: 	C:/Xilinx/Vivado/2019.2/tps/win64/jre9.0.4/bin/java.exe
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 3 GB


User name: 	M.F.M.MUAZ
User home directory: C:/Users/M.F.M.MUAZ
User working directory: C:/Users/M.F.M.MUAZ/Desktop/New folder (2)/HDL_Project/HDL_Project
User country: 	US
User language: 	en
User locale: 	en_US

RDI_BASEROOT: C:/Xilinx/Vivado
HDI_APPROOT: C:/Xilinx/Vivado/2019.2
RDI_DATADIR: C:/Xilinx/Vivado/2019.2/data
RDI_BINDIR: C:/Xilinx/Vivado/2019.2/bin

Vivado preferences file location: C:/Users/M.F.M.MUAZ/AppData/Roaming/Xilinx/Vivado/2019.2/vivado.xml
Vivado preferences directory: C:/Users/M.F.M.MUAZ/AppData/Roaming/Xilinx/Vivado/2019.2/
Vivado layouts directory: C:/Users/M.F.M.MUAZ/AppData/Roaming/Xilinx/Vivado/2019.2/layouts
PlanAhead jar file location: 	C:/Xilinx/Vivado/2019.2/lib/classes/planAhead.jar
Vivado log file location: 	C:/Users/M.F.M.MUAZ/Desktop/New folder (2)/HDL_Project/HDL_Project/vivado.log
Vivado journal file location: 	C:/Users/M.F.M.MUAZ/Desktop/New folder (2)/HDL_Project/HDL_Project/vivado.jou
Engine tmp dir: 	C:/Users/M.F.M.MUAZ/Desktop/New folder (2)/HDL_Project/HDL_Project/.Xil/Vivado-13536-DELL-MU123AZ

Xilinx Environment Variables
----------------------------
KINECTSDK20_DIR: C:\Program Files\Microsoft SDKs\Kinect\v2.0_1409\
NO_XILINX_DATA_LICENSE: HIDDEN
XILINX: C:/Xilinx/Vivado/2019.2/ids_lite/ISE
XILINXD_LICENSE_FILE: E:\Softwares\Xilinx\Xilinx_14.7\xilinx_ise.lic
XILINX_DSP: C:/Xilinx/Vivado/2019.2/ids_lite/ISE
XILINX_PLANAHEAD: C:/Xilinx/Vivado/2019.2
XILINX_VIVADO: C:/Xilinx/Vivado/2019.2
XILINX_VIVADO_HLS: C:/Xilinx/Vivado/2019.2


GUI allocated memory:	128 MB
GUI max memory:		3,072 MB
Engine allocated memory: 548 MB

Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: start_gui 
// WARNING: HEventQueue.dispatchEvent() is taking  1492 ms.
// TclEventType: PROJECT_OPEN_DIALOG
// HOptionPane Error: 'Can't open project 'HDL_Project'. Please verify that the project still exists. (Open Project)'
// WARNING: HTimer (HSTRUtils Dump STR Log Timer) is taking 890ms to process. Increasing delay to 4000 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 548 MB. GUI used memory: 44 MB. Current time: 10/3/20, 4:01:31 PM IST
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1004 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1003 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1003 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1003 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
selectButton("OptionPane.button", "OK"); // JButton (A, G)
selectList(PAResourceQtoS.SyntheticaGettingStartedView_RECENT_PROJECTS, "C:/Users/M.F.M.MUAZ/Desktop/HDL/project/New folder/HDL_Project/HDL_final_project_latest/HDL_final_project_latest.xpr", 0); // r (O, cr)
// bB (cr):  Open Project : addNotify
// Opening Vivado Project: C:/Users/M.F.M.MUAZ/Desktop/HDL/project/New folder/HDL_Project/HDL_final_project_latest/HDL_final_project_latest.xpr. Version: Vivado v2019.2 
// TclEventType: DEBUG_PROBE_SET_CHANGE
// Tcl Message: open_project {C:/Users/M.F.M.MUAZ/Desktop/HDL/project/New folder/HDL_Project/HDL_final_project_latest/HDL_final_project_latest.xpr} 
// Tcl Message: INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. Current project path is 'C:/Users/M.F.M.MUAZ/Desktop/HDL/project/New folder/HDL_Project/HDL_final_project_latest' 
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_DASHBOARD_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// HMemoryUtils.trashcanNow. Engine heap size: 604 MB. GUI used memory: 44 MB. Current time: 10/3/20, 4:14:11 PM IST
// TclEventType: FILE_SET_CHANGE
// TclEventType: PROJECT_NEW
// [GUI Memory]: 53 MB (+53151kb) [00:13:59]
// [Engine Memory]: 655 MB (+534899kb) [00:13:59]
// [GUI Memory]: 68 MB (+12386kb) [00:13:59]
// [GUI Memory]: 75 MB (+4404kb) [00:14:03]
// [GUI Memory]: 83 MB (+4414kb) [00:14:03]
// [GUI Memory]: 94 MB (+6623kb) [00:14:04]
// WARNING: HEventQueue.dispatchEvent() is taking  9546 ms.
// Tcl Message: open_project {C:/Users/M.F.M.MUAZ/Desktop/HDL/project/New folder/HDL_Project/HDL_final_project_latest/HDL_final_project_latest.xpr} 
// Tcl Message: INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. Current project path is 'C:/Users/M.F.M.MUAZ/Desktop/HDL/project/New folder/HDL_Project/HDL_final_project_latest' 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2019.2/data/ip'. 
// HMemoryUtils.trashcanNow. Engine heap size: 688 MB. GUI used memory: 54 MB. Current time: 10/3/20, 4:14:40 PM IST
// [Engine Memory]: 692 MB (+4677kb) [00:14:06]
// WARNING: HEventQueue.dispatchEvent() is taking  1762 ms.
// Tcl Message: open_project: Time (s): cpu = 00:00:23 ; elapsed = 00:00:41 . Memory (MB): peak = 745.426 ; gain = 158.188 
// Project name: HDL_final_project_latest; location: C:/Users/M.F.M.MUAZ/Desktop/HDL/project/New folder/HDL_Project/HDL_final_project_latest; part: xc7a35tcpg236-1
// [GUI Memory]: 109 MB (+11674kb) [00:14:09]
// [Engine Memory]: 735 MB (+8813kb) [00:14:09]
// Elapsed time: 45 seconds
dismissDialog("Open Project"); // bB (cr)
// [Engine Memory]: 784 MB (+12570kb) [00:14:17]
// Tcl Message: update_compile_order -fileset sources_1 
// WARNING: HEventQueue.dispatchEvent() is taking  48873326 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 784 MB. GUI used memory: 55 MB. Current time: 10/4/20, 6:03:13 AM IST
// WARNING: HEventQueue.dispatchEvent() is taking  6105 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1538 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1464 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 35916 ms. Increasing delay to 107748 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 48916861 ms. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 3323 ms. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 2805 ms. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1282 ms. Decreasing delay to 3282 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3307 ms. Increasing delay to 9921 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 3195 ms. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 4830 ms. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2609 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9194 ms. Increasing delay to 27582 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10133 ms. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 19024 ms. Increasing delay to 9000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8697 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1990 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 17489 ms. Increasing delay to 52467 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8397 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2941 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 13230 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7156 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1525 ms. Decreasing delay to 3525 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4211 ms. Increasing delay to 12633 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6797 ms. Increasing delay to 20391 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6235 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 203 ms. Decreasing delay to 2203 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2331 ms.
// Elapsed time: 50262 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, main(Behavioral) (main.vhd)]", 1); // B (F, cr)
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1959 ms. Increasing delay to 5877 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4898 ms. Increasing delay to 14694 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 381 ms. Decreasing delay to 2381 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3486 ms. Increasing delay to 10458 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 102 ms. Decreasing delay to 2102 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6295 ms. Increasing delay to 10000 ms.
